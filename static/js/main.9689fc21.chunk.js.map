{"version":3,"sources":["sass/cloudy.png","components/City.js","sass/sun.png","sass/humidity.png","sass/pressure.png","sass/wind.png","components/Weather.js","App.js","index.js"],"names":["City","props","updateCity","fetchWeather","className","src","img","onSubmit","type","placeholder","onChange","e","target","value","required","Weather","weather","isDay","icon","includes","getTime","t","Date","getHours","getMinutes","Math","floor","main","temp","description","name","sys","country","sun","sunset","sunrise","wind","speed","humidity","pressure","App","useState","city","updateWeather","error","setError","a","preventDefault","axios","url","method","timeout","headers","then","res","data","catch","err","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9689fc21.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/cloudy.fe4ddd17.png\";","import React from 'react'\r\nimport '../sass/main.scss'\r\nimport img from '../sass/cloudy.png'\r\n\r\nexport default function City(props) {\r\n    const {updateCity, fetchWeather} = props;\r\n\r\n    return (\r\n        <div className=\"city\">\r\n            <div className=\"city-img\">\r\n                <img src={img} />\r\n            </div>\r\n            <div className=\"search-box\">\r\n                <p>Enter City Name To Search</p>\r\n                <form onSubmit={fetchWeather}>\r\n                    <input type=\"text\" placeholder=\"Enter City Name\" onChange={(e)=>updateCity(e.target.value)} required/>\r\n                    <button type=\"submit \">Search</button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/sun.d07c9ece.png\";","export default __webpack_public_path__ + \"static/media/humidity.81419385.png\";","export default __webpack_public_path__ + \"static/media/pressure.263650e3.png\";","export default __webpack_public_path__ + \"static/media/wind.639516cc.png\";","import React from 'react'\r\nimport '../sass/main.scss'\r\nimport img from '../sass/cloudy.png'\r\nimport sun from '../sass/sun.png'\r\nimport humidity from '../sass/humidity.png'\r\nimport pressure from '../sass/pressure.png'\r\nimport wind from '../sass/wind.png'\r\n\r\nexport default function Weather(props) {\r\n    const {weather} = props;\r\n    const isDay = weather?.weather[0].icon?.includes('d');\r\n    const getTime=(t)=>{\r\n        return `${new Date(t*1000).getHours()}:${new Date(t*1000).getMinutes()}`;\r\n    }\r\n    return (\r\n        <div className=\"temp-detail\">\r\n            <div className=\"temp\">\r\n                <div className=\"details\">\r\n                {Math.floor(weather?.main?.temp -273)} Â°C | {weather?.weather[0].description}\r\n                </div>\r\n                <div className=\"img\">\r\n                    <img src={`https://openweathermap.org/img/wn/${weather?.weather[0].icon}@4x.png`}/>\r\n                </div>\r\n            </div>\r\n            <div className=\"city-name\">\r\n                {`${weather?.name}, ${weather?.sys?.country}`}\r\n            </div>\r\n            <div className=\"weather-info\">\r\n                <div className=\"p\">Weather Info</div>\r\n                <div className=\"sub-menu\">\r\n                    <div className=\"sunset\">\r\n                        <img src={sun} />\r\n                        <div className=\"info\">\r\n                            {isDay?'Sunset':'Sunrise'}\r\n                            <p>{isDay?getTime(weather?.sys?.sunset):getTime(weather?.sys?.sunrise)}</p>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"wind\">\r\n                        <img src={wind} />\r\n                        <div className=\"info\">\r\n                            Wind\r\n                            <p>{weather?.wind?.speed}</p>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"humidity\">\r\n                        <img src={humidity} />\r\n                        <div className=\"info\">\r\n                            Humidity\r\n                            <p>{weather?.main?.humidity}</p>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"presure\">\r\n                        <img src={pressure} />\r\n                        <div className=\"info\">\r\n                            Pressure\r\n                            <p>{weather?.main?.pressure}</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import './sass/main.scss';\nimport City from './components/City';\nimport Weather from './components/Weather';\nimport {useState ,useEffect} from 'react';\nimport axios from 'axios';\n\nfunction App() {\n  const [city, updateCity] = useState();\n  const [weather, updateWeather] = useState(null);\n  const [error, setError] = useState(false)\n\n  const fetchWeather = async(e) =>{\n    e.preventDefault();\n    // const res= await axios.get(`https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=fe84db9cdb35a33226bd2fb8c9fcfda8`);\n    // updateWeather(res.data);\n    // if(!weather){\n    //     console.log(\"error\");\n    //   }\n  getDataPromise().then(res => updateWeather(res), setError(false))\n    };\n    \n    function getDataPromise() {\n      return axios({\n              url: `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=fe84db9cdb35a33226bd2fb8c9fcfda8`,\n              method: 'get',\n              timeout: 8000,\n              headers: {\n                  'Content-Type': 'application/json',\n              }\n          })\n         .then(res => res.data)\n         .catch (err => setError(true))\n      }\n  \n\n\n\n  return (\n    <div className=\"container\">\n        <div className=\"box\">\n          <div className=\"title\">\n            <h3>Weather App</h3>\n          </div>\n          {weather?\n          <Weather weather={weather}/>:\n            <City updateCity={updateCity} fetchWeather={fetchWeather}/>\n          }\n          <p className=\"error\">{error?'City Not Found':''}</p>\n        </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}